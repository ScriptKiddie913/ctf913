services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: attack_vector
      POSTGRES_USER: attack_user
      POSTGRES_PASSWORD: attack_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - db_data:/var/lib/postgresql/data
    networks: [appnet]

  backend:
    build: ./backend
    env_file: ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    networks: [appnet]

  frontend:
    build: ./frontend
    depends_on: [backend]
    networks: [appnet]

  proxy:
    build: ./nginx
    depends_on: [frontend, backend]
    ports:
      - "8080:80"
    networks: [appnet]

networks:
  appnet:

volumes:
  db_data:
